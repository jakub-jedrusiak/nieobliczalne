"Ideal" = "Idealny"
)
)
)
# zerkamy w bazę
glimpse(iris)
# tworzymy model
iris %>%
lm_price <- lm(Petal.Length ~ Sepal.Length + Sepal.Width, data = .)
iris %>%
lm_price <- lm(Petal.Length ~ Sepal.Length + Sepal.Width, data = .)
iris <- iris
iris %>%
lm_price <- lm(Petal.Length ~ Sepal.Length + Sepal.Width, data = .)
?%>%
?`%>%`
# zerkamy w bazę
glimpse(iris)
# tworzymy model
lm_price <- iris %>%
lm(Petal.Length ~ Sepal.Length + Sepal.Width, data = .)
# próbujemy wyświetlić
lm_price
?sym
library(tidyverse)
#| label: Setup
#| include: false
#| echo: false
library(rlang)
library(tidyverse)
expr(5 + 3)
expr(jakis_argument + 3)
x <- 5
x <- 1:5
a <- quo(sum(x))
x <- 6:10
exec(a)
eval_tidy(a)
quo(sum(x))
a
eval(a)
eval_tidy(a)
quosure_z_x <- quo(x)
x <- 5
dodaj_dwa <- function(liczba) {
x <- 100
eval_tidy(quosure_z_x) + 2
}
dodaj_dwa(10)
dodaj_trzy <- function(df, col) {
dyplr::select(df, col)
}
wybierz <- function(df, col) {
dyplr::select(df, col)
}
wybierz(iris, Species)
wybierz <- function(df, col) {
col <- enquo(col)
dyplr::select(df, !!col)
}
wybierz(iris, Species)
wybierz <- function(df, col) {
col <- enquo(col)
dplyr::select(df, !!col)
}
wybierz(iris, Species)
wybierz(iris, "Species")
nazwa <- function(df, col) {
col <- enquo(col)
as_name(col)
}
nazwa(iris, x)
dodaj_100 <- function(df, col) {
col <- enquo(col)
mutate(df, !!col := !!col + 100)
}
dodaj_100(iris, Sepal.Length)
#| error: true
wybierz_z_quo <- function(df, col) {
kolumna <- quo(col)
df %>%
select(!!kolumna) # wykrzykniki wykonują, nie przejmuj się
}
wybierz_z_quo(iris, Species) %>%
head()
#| error: true
wybierz_z_quo <- function(df, col) {
kolumna <- enquo(col)
df %>%
select(!!kolumna) # wykrzykniki wykonują, nie przejmuj się
}
wybierz_z_quo(iris, Species) %>%
head()
#| error: true
wybierz_z_quo <- function(df, col) {
kolumna <- quo(col)
df %>%
select(!!kolumna) # wykrzykniki wykonują, nie przejmuj się
}
wybierz_z_quo(iris, Species) %>%
head()
wybierz_z_enquo <- function(df, col) {
kolumna <- enquo(col)
df %>%
select(!!kolumna) # wykrzykniki wykonują, nie przejmuj się
}
wybierz_z_enquo(iris, Species) %>%
head()
wybierz_z_enquo <- function(df, col) {
kolumna <- enquo(col)
df %>%
select(!!kolumna) # wykrzykniki wykonują, nie przejmuj się
}
wybierz_z_enquo(iris, Species) %>%
head()
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("quo(x):")
print(x_quo)
print("")
print("enquo(x):")
print(x_enquo)
}
quo_vs_enquo(argument)
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("quo(x):")
print(x_quo)
print("")
print("enquo(x):")
print(x_enquo)
}
quo_vs_enquo(argument)
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("quo(x):")
print(x_quo)
print()
print("enquo(x):")
print(x_enquo)
}
quo_vs_enquo(argument)
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("quo(x):")
print(x_quo)
print("enquo(x):")
print(x_enquo)
}
quo_vs_enquo(argument)
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("quo(x):")
print(x_quo)
print("wykonane quo(x):")
print(!!x_quo)
print("enquo(x):")
print(x_enquo)
print("wykonane enquo(x):")
print(x_enquo)
}
quo_vs_enquo(argument)
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("quo(x):")
print(x_quo)
print("wykonane quo(x):")
print(eval_tidy(x_quo))
print("enquo(x):")
print(x_enquo)
print("wykonane enquo(x):")
print(eval_tidy(x_enquo))
}
quo_vs_enquo(argument)
#| error: true
quo_vs_enquo <- function(x) {
x_quo <- quo(x)
x_enquo <- enquo(x)
print("enquo(x):")
print(x_enquo)
print("wykonane enquo(x):")
print(eval_tidy(x_enquo))
print("quo(x):")
print(x_quo)
print("wykonane quo(x):")
print(eval_tidy(x_quo))
}
quo_vs_enquo(argument)
?`{{`
?`{{}}`
?`{{ }}`
styler:::style_selection()
styler:::style_selection()
opisowe <- function(df, group, ...) {
kolumny_do_policzenia <- enquos(...)
df %>%
group_by({{ group }}) %>%
summarise(
across(
!!!kolumny_do_policzenia,
.fns = list(
N = \(x) sum(!is.na(x)),
M = \(x) mean(x, na.rm = TRUE),
SD = \(x) sd(x, na.rm = TRUE),
A = agricolae::skewness,
K = agricolae::kurtosis,
`NA` = \(x) sum(is.na(x))
)
)
)
}
opisowe(iris, Species, Sepal.Width, Sepal.Length)
opisowe <- function(df, group, ...) {
kolumny_do_policzenia <- enquos(...)
df %>%
group_by({{ group }}) %>%
summarise(
across(
!!kolumny_do_policzenia,
.fns = list(
N = \(x) sum(!is.na(x)),
M = \(x) mean(x, na.rm = TRUE),
SD = \(x) sd(x, na.rm = TRUE),
A = agricolae::skewness,
K = agricolae::kurtosis,
`NA` = \(x) sum(is.na(x))
)
)
)
}
opisowe(iris, Species, Sepal.Width, Sepal.Length)
opisowe <- function(df, group, ...) {
kolumny_do_policzenia <- enquos(...)
df %>%
group_by({{ group }}) %>%
summarise(
across(
!!!kolumny_do_policzenia,
.fns = list(
N = \(x) sum(!is.na(x)),
M = \(x) mean(x, na.rm = TRUE),
SD = \(x) sd(x, na.rm = TRUE),
A = agricolae::skewness,
K = agricolae::kurtosis,
`NA` = \(x) sum(is.na(x))
)
)
)
}
opisowe(iris, Species, Sepal.Width, Sepal.Length)
?across
opisowe <- function(df, group, ...) {
kolumny_do_policzenia <- enquos(...)
df %>%
group_by({{ group }}) %>%
summarise(
across(
c(!!!kolumny_do_policzenia),
.fns = list(
N = \(x) sum(!is.na(x)),
M = \(x) mean(x, na.rm = TRUE),
SD = \(x) sd(x, na.rm = TRUE),
A = agricolae::skewness,
K = agricolae::kurtosis,
`NA` = \(x) sum(is.na(x))
)
)
)
}
opisowe(iris, Species, Sepal.Width, Sepal.Length)
mpg
mtcars
?expr_text
?as_name
library(rlang)
#| label: Setup
#| include: false
#| echo: false
library(rlang)
library(tidyverse)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny <- function(df, col, ...) {
grupy <- ensyms(...)
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny(iris, Sepal.Length, paste0("Spe", "cies"))
srednia_z_kolumny(iris, Sepal.Length, starts_with("Species"))
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_label(enquo(col)))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_label(enquo(col)))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_label(ensym(col)))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_name(ensym(col)))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_label(enquo(col)))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_label(enquo(paste0("Spe", "cies"))))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
print(as_label(quo(paste0("Spe", "cies"))))
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
col <- quo(col)
df %>%
group_by(!!!grupy) %>%
summarise(M = mean({{ col }}))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
srednia_z_kolumny <- function(df, col, ...) {
grupy <- enquos(...)
col <- quo(col)
df %>%
group_by(!!!grupy) %>%
summarise(M = mean(!!col))
}
srednia_z_kolumny(iris, Sepal.Length, Species)
?parse_expr
#| label: Setup
#| include: false
#| echo: false
library(rlang)
library(tidyverse)
source("https://raw.githubusercontent.com/koundy/ggplot_theme_Publication/master/ggplot_theme_Publication-2.R")
?str_replace_all
wykresik(df, X, Y) {
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\.", " ") # dołowne kropki ("\.") zamień na spacje
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all(".", " ") # dołowne kropki ("\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all(".", " ")
ggplot(df, aes(!!X, !!Y)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
install.packages("ggthemes")
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all(".", " ") # dołowne kropki ("\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all(".", " ")
ggplot(df, aes(!!X, !!Y)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\\.", " ") # dołowne kropki ("\\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all("\\.", " ")
ggplot(df, aes(!!X, !!Y)) +
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
?paste
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\\.", " ") # dosłowne kropki ("\\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all("\\.", " ")
tytul <- paste(nazwa_X, nazwa_Y, sep = "-")
ggplot(df, aes(!!X, !!Y)) + #
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\\.", " ") # dosłowne kropki ("\\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all("\\.", " ")
tytul <- paste(nazwa_X, nazwa_Y, sep = "-")
ggplot(df, aes(!!X, !!Y)) + #
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = tytul, x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\\.", " ") # dosłowne kropki ("\\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all("\\.", " ")
nazwa_df <- as_label(enquo(df))
tytul <- paste0(nazwa_X, "-", nazwa_Y, " in ", nazwa_df)
ggplot(df, aes(!!X, !!Y)) + #
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = tytul, x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\\.", " ") # dosłowne kropki ("\\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all("\\.", " ")
nazwa_df <- as_label(enquo(df))
tytul <- paste0(nazwa_X, "-", nazwa_Y, " in ", nazwa_df, " database")
ggplot(df, aes(!!X, !!Y)) + #
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = tytul, x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
wykresik <- function(df, X, Y) {
X <- enquo(X)
Y <- enquo(Y)
nazwa_X <- as_label(X) %>%
str_replace_all("\\.", " ") # dosłowne kropki ("\\.") zamień na spacje
nazwa_Y <- as_label(Y) %>%
str_replace_all("\\.", " ")
nazwa_df <- as_label(enquo(df))
tytul <- paste0(nazwa_X, "-", nazwa_Y, " in ", nazwa_df, " database")
ggplot(df, aes(!!X, !!Y)) + #
geom_jitter() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = tytul, x = nazwa_X, y = nazwa_Y) +
theme_Publication() # koundy/ggplot_theme_Publication na GitHubie
}
wykresik(iris, Sepal.Width, Sepal.Length)
wykresik(USArrests, UrbanPop, Murder)
styler:::style_selection()
styler:::style_selection()
